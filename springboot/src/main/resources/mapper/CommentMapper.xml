<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.CommentMapper">

    <sql id="Base_Column_List">
        id,content,time,type_id,homestay_id,user_id,parent_id,role,deleted
    </sql>

    <resultMap id="CommentResultMap" type="com.example.entity.Comment">
        <id column="id" property="id" />
        <result column="content" property="content" />
        <result column="time" property="time" />
        <result column="type_id" property="typeId" />
        <result column="homestay_id" property="homestayId" />
        <result column="user_id" property="userId" />
        <result column="parent_id" property="parentId" />
        <result column="role" property="role" />
        <result column="deleted" property="deleted" />
    </resultMap>

    <select id="selectAll" resultType="com.example.entity.Comment">
        select comment.*, type.name as typeName, homestay.name as homestayName, user.name as userName
        from comment
        left join type on comment.type_id = type.id
        left join homestay on comment.homestay_id = homestay.id
        left join user on comment.user_id = user.id
        <where>
            <if test="id != null"> and comment.id= #{id}</if>
            <if test="content != null"> and comment.content like concat('%', #{content}, '%')</if>
            <if test="time != null"> and time= #{time}</if>
            <if test="typeId != null"> and type_id= #{typeId}</if>
            <if test="homestayId != null"> and comment.homestay_id= #{homestayId}</if>
            <if test="userId != null"> and user_id= #{userId}</if>
            <if test="parentId != null"> and parent_id= #{parentId}</if>
            <if test="role != null"> and comment.role= #{role}</if>
            <if test="deleted != null"> and comment.deleted= #{deleted}</if>
        </where>
        order by id desc
    </select>

    <select id="selectById" resultType="com.example.entity.Comment">
        select
        <include refid="Base_Column_List" />
        from comment
        where id = #{id}
    </select>

    <sql id="commentColumns">
        c.id, c.content, c.time, c.type_id, c.homestay_id, c.user_id, c.parent_id, c.role, c.deleted
    </sql>

    <select id="selectRepliesByParentId" resultMap="CommentResultMap">
        with recursive cte as (
            select
                <include refid="commentColumns"/>,
                c.id as root_id,
                0 as level
            from comment c
            where c.parent_id = #{parentId}
            union all
            select
                <include refid="commentColumns"/>,
                cte.root_id,
                cte.level + 1
            from comment c
                join cte on c.parent_id = cte.id
        )
        select
            cte.id, cte.content, cte.time, cte.type_id, cte.homestay_id, cte.user_id, cte.parent_id, cte.role , cte.deleted
        from cte
        where cte.deleted = #{deleted}
        order by cte.id
    </select>

    <update id="deleteById">
        update comment
        set deleted = 1
        where id = #{id}
    </update>

    <insert id="insert" parameterType="com.example.entity.Comment" useGeneratedKeys="true">
        insert into comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="content != null">content,</if>
            <if test="time != null">time,</if>
            <if test="typeId != null">type_id,</if>
            <if test="homestayId != null">homestay_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="role != null">role,</if>
            <if test="deleted != null">deleted,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="content != null">#{content},</if>
            <if test="time != null">#{time},</if>
            <if test="typeId != null">#{typeId},</if>
            <if test="homestayId != null">#{homestayId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="role != null">#{role},</if>
            <if test="deleted != null">#{deleted},</if>
        </trim>
    </insert>

    <update id="updateById" parameterType="com.example.entity.Admin">
        update comment
        <set>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="time != null">
                time = #{time},
            </if>
            <if test="typeId != null">
                type_id = #{typeId},
            </if>
            <if test="homestayId != null">
                homestay_id = #{homestayId},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
            <if test="role != null">
                role = #{role},
            </if>
            <if test="deleted != null">
                #{deleted},
            </if>
        </set>
        where id = #{id}
    </update>

</mapper>